; Supervisor configuration file for Persistent Queue System

[unix_http_server]
file=/tmp/supervisor.sock   ; Path to the socket file

[supervisord]
logfile=/tmp/supervisord.log ; Path to the supervisor log file
logfile_maxbytes=50MB        ; Maximum log file size
logfile_backups=10           ; Number of log file backups
loglevel=info                ; Log level (info, debug, etc.)
pidfile=/tmp/supervisord.pid ; Path to the PID file
nodaemon=false               ; Run in the foreground (false for background)
minfds=1024                  ; Minimum number of file descriptors
minprocs=200                 ; Minimum number of processes

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock ; Use the socket file to connect

; Producer Program
[program:producer]
command=python producer.py             ; Command to start the producer
directory=%(here)s                     ; Run in the current directory
autostart=true                         ; Start automatically with supervisor
autorestart=true                       ; Restart if the process crashes
stderr_logfile=logs/producer_err.log   ; Log file for errors
stdout_logfile=logs/producer_out.log   ; Log file for standard output
stderr_logfile_maxbytes=10MB           ; Maximum size of error log file
stdout_logfile_maxbytes=10MB           ; Maximum size of output log file
stderr_logfile_backups=5               ; Number of error log backups
stdout_logfile_backups=5               ; Number of output log backups
environment=PYTHONUNBUFFERED="1"       ; Ensure Python output is unbuffered

; Consumer Program
[program:consumer]
command=python consumer.py             ; Command to start the consumer
directory=%(here)s                     ; Run in the current directory
autostart=true                         ; Start automatically with supervisor
autorestart=true                       ; Restart if the process crashes
stderr_logfile=logs/consumer_err.log   ; Log file for errors
stdout_logfile=logs/consumer_out.log   ; Log file for standard output
stderr_logfile_maxbytes=10MB           ; Maximum size of error log file
stdout_logfile_maxbytes=10MB           ; Maximum size of output log file
stderr_logfile_backups=5               ; Number of error log backups
stdout_logfile_backups=5               ; Number of output log backups
environment=PYTHONUNBUFFERED="1"       ; Ensure Python output is unbuffered

; Ops Console Program
[program:ops_console]
command=streamlit run ops_console.py   ; Command to start the Ops console
directory=%(here)s                     ; Run in the current directory
autostart=true                         ; Start automatically with supervisor
autorestart=true                       ; Restart if the process crashes
stderr_logfile=logs/ops_err.log        ; Log file for errors
stdout_logfile=logs/ops_out.log        ; Log file for standard output
stderr_logfile_maxbytes=10MB           ; Maximum size of error log file
stdout_logfile_maxbytes=10MB           ; Maximum size of output log file
stderr_logfile_backups=5               ; Number of error log backups
stdout_logfile_backups=5               ; Number of output log backups
environment=PYTHONUNBUFFERED="1"       ; Ensure Python output is unbuffered

; Admin Console Program
[program:admin_console]
command=streamlit run admin_console.py ; Command to start the Admin console
directory=%(here)s                     ; Run in the current directory
autostart=true                         ; Start automatically with supervisor
autorestart=true                       ; Restart if the process crashes
stderr_logfile=logs/admin_err.log      ; Log file for errors
stdout_logfile=logs/admin_out.log      ; Log file for standard output
stderr_logfile_maxbytes=10MB           ; Maximum size of error log file
stdout_logfile_maxbytes=10MB           ; Maximum size of output log file
stderr_logfile_backups=5               ; Number of error log backups
stdout_logfile_backups=5               ; Number of output log backups
environment=PYTHONUNBUFFERED="1"       ; Ensure Python output is unbuffered

[program:api]
command=uvicorn api:app --host 0.0.0.0 --port 8000
directory=%(here)s
autostart=true
autorestart=true
stderr_logfile=logs/api_err.log
stdout_logfile=logs/api_out.log
environment=PYTHONUNBUFFERED="1"

[program:cleanup]
command=python scripts/cleanup.py
directory=%(here)s
autostart=true
autorestart=true
stderr_logfile=logs/cleanup_err.log
stdout_logfile=logs/cleanup_out.log
environment=PYTHONUNBUFFERED="1"